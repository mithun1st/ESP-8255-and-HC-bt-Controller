/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ex;

import code.*;
import java.awt.Toolkit;

/**
 *
 * @author Mahadi Hassan
 */
public class ex extends javax.swing.JFrame {

    /**
     * Creates new form ap
     */
    public ex() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/espController/router.png")));
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this ex. The content of this method is always
 regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Code for NodeMCU");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("#include <ESP8266WiFi.h>\n#include <WiFiClient.h>\n#include <ESP8266WebServer.h>\n\n#define led1 D0\n#define led2 D4\n\nESP8266WebServer server(80);\n\nconst char* ssid = \"NodeMCU ESP8266 (Mithun)\";\n\nString str = \"\";\n\nvoid setup() {\n\n  Serial.begin(115200);\n\n  pinMode(led1, OUTPUT);\n  pinMode(led2, OUTPUT);\n\n  // Connecting WiFi\n\n  WiFi.mode(WIFI_AP);\n  WiFi.softAP(ssid, \"87654321\");\n\n  Serial.print(\"\\nAP IP address: \");\n  Serial.println(WiFi.softAPIP());\n\n  // Starting WEB-server\n  server.on ( \"/test\", fnc );\n  server.onNotFound ( html );\n  server.begin();\n}\n\nvoid loop() {\n  server.handleClient();\n  if (!server.hasArg(\"m2n\") || str == server.arg(\"m2n\")) {\n    return;\n  }\n  str = server.arg(\"m2n\");\n  Serial.println(\">> \" + str);\n\n  if (str == \"@i1\" || str == \"@m1\") {\n    digitalWrite(led1, 1);\n  }\n  else if (str == \"@i0\" || str == \"@m0\") {\n    digitalWrite(led1, 0);\n  }\n  else if (str == \"@j1\" || str == \"@n1\") {\n    digitalWrite(led2, 1);\n  }\n  else if (str == \"@j0\" || str == \"@n0\") {\n    digitalWrite(led2, 0);\n  }\n\n  else if (str == \"@k1\" || str == \"off\") {\n    digitalWrite(led1, 1);\n    digitalWrite(led2, 1);\n  }\n  else if (str == \"@k0\" || str == \"on\") {\n    digitalWrite(led1, 0);\n    digitalWrite(led2, 0);\n  }\n\n  else if (str == \"@l0\") {\n    digitalWrite(led1, 1);\n    digitalWrite(led2, 0);\n  }\n  //-------------\n  else if (str == \"@uu\") {\n    digitalWrite(led1, 0);\n  }\n  else if (str == \"@dd\") {\n    digitalWrite(led1, 0);\n  }\n  else if (str == \"@ll\") {\n    digitalWrite(led1, 0);\n  }\n  else if (str == \"@rr\") {\n    digitalWrite(led1, 0);\n  }\n  else if (str == \"@oo\") {\n    digitalWrite(led1, 1);\n  }\n  //----------\n  else if (str == \"@up\") {\n    digitalWrite(led2, 0);\n  }\n  else if (str == \"@dw\") {\n    digitalWrite(led2, 0);\n  }\n  else if (str == \"@lf\") {\n    digitalWrite(led2, 0);\n  }\n  else if (str == \"@rg\") {\n    digitalWrite(led2, 0);\n  }\n  else if (str == \"@st\") {\n    digitalWrite(led2, 1);\n  }\n  //-----------\n  else if (str == \"@l1\") {\n    digitalWrite(led1, 0);\n    digitalWrite(led2, 1);\n  }\n  else if (str.substring(0, 2) == \"@x\") {\n    if (str.substring(2, str.length()).toInt() <= 50) {\n      digitalWrite(led1, 0);\n      digitalWrite(led2, 1);\n    }\n    else {\n      digitalWrite(led1, 1);\n      digitalWrite(led2, 0);\n    }\n  }\n  else if (str.substring(0, 2) == \"@x\") {\n    if (str.substring(2, str.length()).toInt() <= 50) {\n      digitalWrite(led1, 0);\n      digitalWrite(led2, 1);\n    }\n    else {\n      digitalWrite(led1, 1);\n      digitalWrite(led2, 0);\n    }\n  }\n  else if (str.substring(0, 2) == \"@y\") {\n    if (str.substring(2, str.length()).toInt() %2 == 0) {\n      digitalWrite(led1, 0);\n      digitalWrite(led2, 1);\n    }\n    else {\n      digitalWrite(led1, 1);\n      digitalWrite(led2, 0);\n    }\n  }\n\n\n}\nvoid fnc() {\n  Serial.println(\"Example\");\n  server.send (200, \"<!DOCTYPE HTML>\");\n}\n\nvoid html() {\n  server.send (200, \"<!DOCTYPE HTML>\");\n}");
        jTextArea2.setAutoscrolls(false);
        jTextArea2.setOpaque(false);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Testing / Example With Led (AP)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting ex (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
